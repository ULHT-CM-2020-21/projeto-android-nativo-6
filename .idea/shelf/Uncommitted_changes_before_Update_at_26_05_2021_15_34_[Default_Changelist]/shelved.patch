Index: app/src/main/java/pt/ulusofona/deisi/a2020/cm/g6/data/repositories/CovidRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package pt.ulusofona.deisi.a2020.cm.g6.data.repositories\r\n\r\nimport android.os.Build\r\nimport kotlinx.coroutines.CoroutineScope\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.launch\r\nimport pt.ulusofona.deisi.a2020.cm.g6.data.local.room.dao.CovidDao\r\nimport pt.ulusofona.deisi.a2020.cm.g6.data.local.room.entities.Covid\r\nimport pt.ulusofona.deisi.a2020.cm.g6.data.remote.services.CovidService\r\nimport pt.ulusofona.deisi.a2020.cm.g6.ui.listener.FetchRepositoryCovidListener\r\nimport pt.ulusofona.deisi.a2020.cm.g6.ui.listener.FetchRepositoryGraficoListener\r\nimport pt.ulusofona.deisi.a2020.cm.g6.ui.utils.Grafico\r\nimport retrofit2.Retrofit\r\nimport java.text.SimpleDateFormat\r\nimport java.time.LocalDate\r\nimport java.time.format.DateTimeFormatter\r\nimport java.time.temporal.ChronoUnit\r\nimport java.util.*\r\n\r\nclass CovidRepository(private val local: CovidDao, private val remote: Retrofit) {\r\n\r\n    private lateinit var listenerCovid: FetchRepositoryCovidListener\r\n    private lateinit var listenerGraficos: FetchRepositoryGraficoListener\r\n\r\n\r\n    fun check15DaysData() {\r\n        CoroutineScope(Dispatchers.IO).launch {\r\n            val service = remote.create(CovidService::class.java)\r\n            // confirmar se tenho na bd pelo menos 15 dias de dados\r\n            for (i in 16 downTo 1) {\r\n                var dadosBD = local.getByDate(getDaysAgo(i))\r\n                if (dadosBD == null) {\r\n                    val response = service.getDadosDiaEspecifico(getDaysAgo(i))\r\n                    if (response.isSuccessful) {\r\n\r\n                        var covidManyDays = Covid(getDaysAgo(i))\r\n\r\n                        val numberCovidTotal = daysBetween(getDaysAgo(i)).toString()\r\n\r\n                        covidManyDays.confirmadosTotais = response.body()?.confirmados?.get(numberCovidTotal)!!\r\n                        covidManyDays.internadosTotais = response.body()?.internados?.get(numberCovidTotal)!!\r\n                        covidManyDays.obitosTotais = response.body()?.obitos?.get(numberCovidTotal)!!\r\n                        covidManyDays.recuperadosTotais = response.body()?.recuperados?.get(numberCovidTotal)!!\r\n\r\n                        covidManyDays.norteTotal = response.body()?.confirmados_arsnorte?.get(numberCovidTotal)!!\r\n                        covidManyDays.centroTotal = response.body()?.confirmados_arscentro?.get(numberCovidTotal)!!\r\n                        covidManyDays.lisboaTotal = response.body()?.confirmados_arslvt?.get(numberCovidTotal)!!\r\n                        covidManyDays.alentejoTotal = response.body()?.confirmados_arsalentejo?.get(numberCovidTotal)!!\r\n                        covidManyDays.algarveTotal = response.body()?.confirmados_arsalgarve?.get(numberCovidTotal)!!\r\n                        covidManyDays.acoresTotal = response.body()?.confirmados_acores?.get(numberCovidTotal)!!\r\n                        covidManyDays.madeiraTotal = response.body()?.confirmados_madeira?.get(numberCovidTotal)!!\r\n\r\n                        local.insert(covidManyDays)\r\n                    }\r\n                }\r\n            }\r\n            for(i in 15 downTo 0){\r\n                var atualCovid = local.getByDate(getDaysAgo(i))\r\n                var antigoCovid = local.getByDate(getDaysAgo(i + 1))\r\n                if(atualCovid != null && antigoCovid != null){\r\n                    atualCovid = calcularDadosCovidEntreDatas(atualCovid!!, antigoCovid!!)\r\n                    local.updateByDate24h(atualCovid.confirmados24,atualCovid.recuperados24,atualCovid.internados24,atualCovid.obitos24, atualCovid.data)\r\n                }\r\n            }\r\n            var covidHoje = local.getByDate(getDaysAgo(0))\r\n            if (covidHoje == null) {\r\n                val response = service.getDadosDiaEspecifico(getDaysAgo(0))\r\n                if (response.isSuccessful) {\r\n\r\n                    var covidManyDays = Covid(getDaysAgo(0))\r\n\r\n                    val numberCovidTotal = daysBetween(getDaysAgo(0)).toString()\r\n\r\n                    covidManyDays.confirmadosTotais = response.body()?.confirmados?.get(numberCovidTotal)!!\r\n                    covidManyDays.internadosTotais = response.body()?.internados?.get(numberCovidTotal)!!\r\n                    covidManyDays.obitosTotais = response.body()?.obitos?.get(numberCovidTotal)!!\r\n                    covidManyDays.recuperadosTotais = response.body()?.recuperados?.get(numberCovidTotal)!!\r\n\r\n                    covidManyDays.norteTotal = response.body()?.confirmados_arsnorte?.get(numberCovidTotal)!!\r\n                    covidManyDays.centroTotal = response.body()?.confirmados_arscentro?.get(numberCovidTotal)!!\r\n                    covidManyDays.lisboaTotal = response.body()?.confirmados_arslvt?.get(numberCovidTotal)!!\r\n                    covidManyDays.alentejoTotal = response.body()?.confirmados_arsalentejo?.get(numberCovidTotal)!!\r\n                    covidManyDays.algarveTotal = response.body()?.confirmados_arsalgarve?.get(numberCovidTotal)!!\r\n                    covidManyDays.acoresTotal = response.body()?.confirmados_acores?.get(numberCovidTotal)!!\r\n                    covidManyDays.madeiraTotal = response.body()?.confirmados_madeira?.get(numberCovidTotal)!!\r\n\r\n                    var antigoCovid = local.getByDate(getDaysAgo(1))\r\n                    covidManyDays = calcularDadosCovidEntreDatas(covidManyDays, antigoCovid!!)\r\n                    local.updateByDate24h(covidManyDays.confirmados24,covidManyDays.recuperados24,covidManyDays.internados24,covidManyDays.obitos24, covidManyDays.data)\r\n\r\n\r\n                    var grafico = Grafico()\r\n                    var listaConfirmados = mutableListOf<Int>()\r\n                    var listaRecuperados = mutableListOf<Int>()\r\n                    var listaInternados = mutableListOf<Int>()\r\n                    var listaObitos = mutableListOf<Int>()\r\n\r\n                    for(i in 0..14){\r\n                        var covid = local.getByDate(getDaysAgo(i))\r\n                        listaConfirmados.add(covid!!.confirmados24)\r\n                        listaRecuperados.add(covid!!.recuperados24)\r\n                        if(covid!!.internados24 < 0){\r\n                            listaInternados.add(0)\r\n                        }else{\r\n                            listaInternados.add(covid!!.internados24)\r\n                        }\r\n                        listaObitos.add(covid!!.obitos24)\r\n                    }\r\n\r\n                    grafico.fromToday = true\r\n\r\n                    grafico.valuesConfirmados = listaConfirmados\r\n                    grafico.valuesRecuperados = listaRecuperados\r\n                    grafico.valuesInternados = listaInternados\r\n                    grafico.valuesObitos = listaObitos\r\n\r\n                    grafico.maxConfirmados = getMaxList(listaConfirmados)\r\n                    grafico.maxRecuperados = getMaxList(listaRecuperados)\r\n                    grafico.maxInternados = getMaxList(listaInternados)\r\n                    grafico.maxObitos = getMaxList(listaObitos)\r\n\r\n                    listenerGraficos.onFetchedRepository(grafico)\r\n                } else {\r\n                    var grafico = Grafico()\r\n                    var listaConfirmados = mutableListOf<Int>()\r\n                    var listaRecuperados = mutableListOf<Int>()\r\n                    var listaInternados = mutableListOf<Int>()\r\n                    var listaObitos = mutableListOf<Int>()\r\n\r\n                    for(i in 1..15){\r\n                        var covid = local.getByDate(getDaysAgo(i))\r\n                        listaConfirmados.add(covid!!.confirmados24)\r\n                        listaRecuperados.add(covid!!.recuperados24)\r\n                        if(covid!!.internados24 < 0){\r\n                            listaInternados.add(0)\r\n                        }else{\r\n                            listaInternados.add(covid!!.internados24)\r\n                        }\r\n                        listaObitos.add(covid!!.obitos24)\r\n                    }\r\n\r\n                    grafico.fromToday = false\r\n\r\n                    grafico.valuesConfirmados = listaConfirmados\r\n                    grafico.valuesRecuperados = listaRecuperados\r\n                    grafico.valuesInternados = listaInternados\r\n                    grafico.valuesObitos = listaObitos\r\n\r\n                    grafico.maxConfirmados = getMaxList(listaConfirmados)\r\n                    grafico.maxRecuperados = getMaxList(listaRecuperados)\r\n                    grafico.maxInternados = getMaxList(listaInternados)\r\n                    grafico.maxObitos = getMaxList(listaObitos)\r\n\r\n                    listenerGraficos.onFetchedRepository(grafico)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fun getMaxList(lista : List<Int>): Int {\r\n        var max = 0;\r\n        for (i in lista){\r\n            if (i > max){\r\n                max = i\r\n            }\r\n        }\r\n        return max\r\n    }\r\n\r\n    // Confirma que temos pelo menos 2 dias de dados para desenhar dashboard\r\n    fun checkBDLastUpdates() {\r\n        CoroutineScope(Dispatchers.IO).launch {\r\n            val service = remote.create(CovidService::class.java)\r\n\r\n            var bdOneDayAgo = local.getByDate(getDaysAgo(1))\r\n            var bdTwoDayAgo = local.getByDate(getDaysAgo(2))\r\n\r\n            if (bdOneDayAgo == null) {\r\n                val response = service.getDadosDiaEspecifico(getDaysAgo(1))\r\n                if (response.isSuccessful) {\r\n\r\n                    var covidOneDayAgo = Covid(getDaysAgo(1))\r\n                    val numberCovidTotal = daysBetween(getDaysAgo(1)).toString()\r\n\r\n                    covidOneDayAgo.confirmadosTotais =\r\n                        response.body()?.confirmados?.get(numberCovidTotal)!!\r\n                    covidOneDayAgo.recuperadosTotais =\r\n                        response.body()?.recuperados?.get(numberCovidTotal)!!\r\n                    covidOneDayAgo.obitosTotais = response.body()?.obitos?.get(numberCovidTotal)!!\r\n                    covidOneDayAgo.internadosTotais =\r\n                        response.body()?.internados?.get(numberCovidTotal)!!\r\n\r\n                    covidOneDayAgo.norteTotal =\r\n                        response.body()?.confirmados_arsnorte?.get(numberCovidTotal)!!\r\n                    covidOneDayAgo.centroTotal =\r\n                        response.body()?.confirmados_arscentro?.get(numberCovidTotal)!!\r\n                    covidOneDayAgo.lisboaTotal =\r\n                        response.body()?.confirmados_arslvt?.get(numberCovidTotal)!!\r\n                    covidOneDayAgo.alentejoTotal =\r\n                        response.body()?.confirmados_arsalentejo?.get(numberCovidTotal)!!\r\n                    covidOneDayAgo.algarveTotal =\r\n                        response.body()?.confirmados_arsalgarve?.get(numberCovidTotal)!!\r\n                    covidOneDayAgo.madeiraTotal =\r\n                        response.body()?.confirmados_madeira?.get(numberCovidTotal)!!\r\n                    covidOneDayAgo.acoresTotal =\r\n                        response.body()?.confirmados_acores?.get(numberCovidTotal)!!\r\n\r\n                    local.insert(covidOneDayAgo)\r\n                }\r\n            }\r\n\r\n            if (bdTwoDayAgo == null) {\r\n                val response = service.getDadosDiaEspecifico(getDaysAgo(2))\r\n                if (response.isSuccessful) {\r\n\r\n                    var covidTwoDayAgo = Covid(getDaysAgo(2))\r\n                    val numberCovidTotal = daysBetween(getDaysAgo(2)).toString()\r\n\r\n                    covidTwoDayAgo.confirmadosTotais =\r\n                        response.body()?.confirmados?.get(numberCovidTotal)!!\r\n                    covidTwoDayAgo.recuperadosTotais =\r\n                        response.body()?.recuperados?.get(numberCovidTotal)!!\r\n                    covidTwoDayAgo.obitosTotais = response.body()?.obitos?.get(numberCovidTotal)!!\r\n                    covidTwoDayAgo.internadosTotais =\r\n                        response.body()?.internados?.get(numberCovidTotal)!!\r\n\r\n                    covidTwoDayAgo.norteTotal =\r\n                        response.body()?.confirmados_arsnorte?.get(numberCovidTotal)!!\r\n                    covidTwoDayAgo.centroTotal =\r\n                        response.body()?.confirmados_arscentro?.get(numberCovidTotal)!!\r\n                    covidTwoDayAgo.lisboaTotal =\r\n                        response.body()?.confirmados_arslvt?.get(numberCovidTotal)!!\r\n                    covidTwoDayAgo.alentejoTotal =\r\n                        response.body()?.confirmados_arsalentejo?.get(numberCovidTotal)!!\r\n                    covidTwoDayAgo.algarveTotal =\r\n                        response.body()?.confirmados_arsalgarve?.get(numberCovidTotal)!!\r\n                    covidTwoDayAgo.madeiraTotal =\r\n                        response.body()?.confirmados_madeira?.get(numberCovidTotal)!!\r\n                    covidTwoDayAgo.acoresTotal =\r\n                        response.body()?.confirmados_acores?.get(numberCovidTotal)!!\r\n\r\n                    local.insert(covidTwoDayAgo)\r\n                }\r\n            }\r\n            checkLastRemoteUpdate()\r\n        }\r\n    }\r\n\r\n    // confirma qual os dados mais recente das API\r\n    fun checkLastRemoteUpdate() {\r\n        val service = remote.create(CovidService::class.java)\r\n        CoroutineScope(Dispatchers.IO).launch {\r\n            var responseHoje = service.getDadosDia()\r\n            if (responseHoje.isSuccessful && responseHoje.body()?.data == getDaysAgo(0)) {\r\n                var covidHoje = Covid(getDaysAgo(0))\r\n                covidHoje.confirmadosTotais = responseHoje.body()?.confirmados!!\r\n                covidHoje.recuperadosTotais = responseHoje.body()?.recuperados!!\r\n                covidHoje.obitosTotais = responseHoje.body()?.obitos!!\r\n                covidHoje.internadosTotais = responseHoje.body()?.internados!!\r\n\r\n                covidHoje.norteTotal = responseHoje.body()?.confirmados_arsnorte!!\r\n                covidHoje.centroTotal = responseHoje.body()?.confirmados_arscentro!!\r\n                covidHoje.lisboaTotal = responseHoje.body()?.confirmados_arslvt!!\r\n                covidHoje.alentejoTotal = responseHoje.body()?.confirmados_arsalentejo!!\r\n                covidHoje.algarveTotal = responseHoje.body()?.confirmados_arsalgarve!!\r\n                covidHoje.madeiraTotal = responseHoje.body()?.confirmados_madeira!!\r\n                covidHoje.acoresTotal = responseHoje.body()?.confirmados_acores!!\r\n\r\n                var covidOntem = local.getByDate(getDaysAgo(1))\r\n\r\n                if (covidOntem != null) {\r\n                    covidHoje = calcularDadosCovidEntreDatas(covidHoje, covidOntem)\r\n                    listenerCovid.onFetchedRepository(covidHoje)\r\n                }\r\n\r\n\r\n            } else {\r\n                var covidOntem = local.getByDate(getDaysAgo(1))\r\n                var covidDoisDias = local.getByDate(getDaysAgo(2))\r\n                if (covidOntem != null && covidDoisDias != null) {\r\n                    covidOntem = calcularDadosCovidEntreDatas(covidOntem, covidDoisDias)\r\n                    listenerCovid.onFetchedRepository(covidOntem)\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    // Calcular dados entre duas datas (Covid 24 horas)\r\n    fun calcularDadosCovidEntreDatas(covidAtual: Covid, covidAntigo: Covid): Covid {\r\n\r\n        covidAtual.confirmados24 =\r\n            (covidAtual.confirmadosTotais?.minus(covidAntigo.confirmadosTotais)!!)\r\n        covidAtual.internados24 =\r\n            (covidAtual.internadosTotais?.minus(covidAntigo.internadosTotais)!!)\r\n        covidAtual.obitos24 = (covidAtual.obitosTotais?.minus(covidAntigo.obitosTotais))!!\r\n        covidAtual.recuperados24 =\r\n            (covidAtual.recuperadosTotais?.minus(covidAntigo.recuperadosTotais))!!\r\n\r\n        covidAtual.norte24 = (covidAtual.norteTotal?.minus(covidAntigo.norteTotal))!!\r\n        covidAtual.centro24 = (covidAtual.centroTotal?.minus(covidAntigo.centroTotal))!!\r\n        covidAtual.lisboa24 = (covidAtual.lisboaTotal?.minus(covidAntigo.lisboaTotal))!!\r\n        covidAtual.alentejo24 = (covidAtual.alentejoTotal?.minus(covidAntigo.alentejoTotal))!!\r\n        covidAtual.algarve24 = (covidAtual.algarveTotal?.minus(covidAntigo.algarveTotal))!!\r\n        covidAtual.acores24 = (covidAtual.acoresTotal?.minus(covidAntigo.acoresTotal))!!\r\n        covidAtual.madeira24 = (covidAtual.madeiraTotal?.minus(covidAntigo.madeiraTotal))!!\r\n\r\n        return covidAtual\r\n    }\r\n\r\n    // Main function to Dashboard\r\n    fun getCovidData(callback: FetchRepositoryCovidListener) {\r\n        listenerCovid = callback\r\n        checkBDLastUpdates()\r\n    }\r\n\r\n    fun getDaysAgo(daysAgo: Int): String {\r\n        val calendar = Calendar.getInstance()\r\n        calendar.add(Calendar.DAY_OF_YEAR, -daysAgo)\r\n        return SimpleDateFormat(\"dd-MM-yyyy\").format(calendar.time)\r\n    }\r\n\r\n    fun daysBetween(date: String): Long {\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n            val formatter: DateTimeFormatter = DateTimeFormatter.ofPattern(\"dd-MM-yyyy\")\r\n            val start: LocalDate = LocalDate.parse(date, formatter)\r\n            val end: LocalDate = LocalDate.parse(\"26-02-2020\", formatter)\r\n            return ChronoUnit.DAYS.between(end, start)\r\n        }\r\n        return 0\r\n    }\r\n\r\n    fun get15DaysDataGraph(listener: FetchRepositoryGraficoListener) {\r\n        listenerGraficos = listener\r\n        check15DaysData()\r\n    }\r\n\r\n\r\n    //#TODO APAGAR ESTE METODO\r\n    fun deleteAllFromDB() {\r\n        CoroutineScope(Dispatchers.IO).launch {\r\n            local.deleteAllWARNING()\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/pt/ulusofona/deisi/a2020/cm/g6/data/repositories/CovidRepository.kt	(revision 7ab9be637f6d3300d350d6b82cccace1adc17a6f)
+++ app/src/main/java/pt/ulusofona/deisi/a2020/cm/g6/data/repositories/CovidRepository.kt	(date 1622037968617)
@@ -186,7 +186,8 @@
                         response.body()?.confirmados?.get(numberCovidTotal)!!
                     covidOneDayAgo.recuperadosTotais =
                         response.body()?.recuperados?.get(numberCovidTotal)!!
-                    covidOneDayAgo.obitosTotais = response.body()?.obitos?.get(numberCovidTotal)!!
+                    covidOneDayAgo.obitosTotais =
+                        response.body()?.obitos?.get(numberCovidTotal)!!
                     covidOneDayAgo.internadosTotais =
                         response.body()?.internados?.get(numberCovidTotal)!!
 
